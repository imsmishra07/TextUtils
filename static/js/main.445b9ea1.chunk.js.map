{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","trim","split","length","Alert","alert","role","message","defaultProps","about","App","setMode","setAlert","setTimeout","body","setInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.445b9ea1.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n\r\n  \r\n    return (\r\n      <div>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`} >\r\n        <div className=\"container-fluid\"  >\r\n          {/*<Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>*/}\r\n          <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/*<Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>*/}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n\r\n              </li>\r\n              {/*}\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n    </li>*/}\r\n             \r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode==='dark'?'light':'dark'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      </div>\r\n    )\r\n}\r\n\r\nNavbar.propTypes={\r\n    title : PropTypes.string.isRequired ,\r\n    about : PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps ={\r\n    title : \"TextUtils\",\r\n    about :\"About\"\r\n}","import React ,{useState}from 'react'\r\nimport PropTypes from 'prop-types'\r\nexport default function TextForm(props) {\r\n    const [text, setText]=useState(\"\");\r\n    const handlesUpClick=()=>{\r\n           // console.log(\"Upper Case was Clicked\" + text);\r\n            let newText=text.toUpperCase();\r\n            setText(newText)\r\n            props.showAlert(\"success\",\"Converted to upper Case\")\r\n\r\n\r\n    }\r\n    const handlesLowClick=()=>{\r\n        // console.log(\"Upper Case was Clicked\" + text);\r\n         let newText=text.toLowerCase();\r\n         setText(newText)\r\n         props.showAlert(\"success\",\"Converted to lower Case\")\r\n\r\n\r\n\r\n }\r\n const handlesCopyClick=()=>\r\n {\r\n\r\n    let text=document.getElementById(\"myBox\")\r\n    text.select()\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"success\",\"Copied to clipboard\")\r\n\r\n }\r\n\r\n const handlesClearClick=()=>{\r\n\r\n        setText(\"\")\r\n    props.showAlert(\"warning\",\"Textbox Cleared\");\r\n        \r\n }\r\n    const handlesOnChange=(event)=>{\r\n\r\n       // console.log(\"On change\");\r\n        setText(event.target.value)\r\n    }\r\n   \r\n    return (\r\n        <>\r\n        <div>\r\n        <h1 style={{color : props.mode==='light'?'#265948':'white'}}>\r\n            {props.heading}\r\n        </h1>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"myBox\" className=\"form-label\"></label>\r\n        <textarea className=\"form-control\" value={text} onChange={handlesOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white',\r\n    color :props.mode==='dark'?'white':'#265948'\r\n    }} id=\"myBox\" rows=\"10\"></textarea>\r\n      </div>\r\n      <button className=\"btn btn-success mx-2 my=2\" onClick={handlesUpClick}>Convert to Upper Case</button>\r\n      <button className=\"btn btn-success mx-2 my=2\" onClick={handlesLowClick}>Convert to Lower Case</button>\r\n      <button className=\"btn btn-success mx-2 my=2\" onClick={handlesCopyClick}>Copy</button>\r\n\r\n      <button className=\"btn btn-success mx-2 my=2\" onClick={handlesClearClick}>Clear</button>\r\n      \r\n\r\n        </div>\r\n        <div className=\"container mb-3\" style={{color : props.mode==='dark'?'white':'#265948'}} >\r\n            <h2 >\r\n                Your Text Summary\r\n            </h2>\r\n            <p>{text.trim().split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 *(text.trim().split(\" \").length)} Minutes Read</p>\r\n\r\n            <h3>\r\n                Preview\r\n            </h3>\r\n            <p>{text.length>0?text:\"Enter your text above to preview it here\"}</p>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\nTextForm.propTypes={\r\n\r\n    heading : PropTypes.string.isRequired\r\n}\r\nTextForm.defaultProps={\r\n    heading : \"please provide a heading \"\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n       props.alert &&\r\n                <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                    <strong>{props.alert.message}</strong>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n                </div>\r\n        \r\n    )\r\n}\r\n","\n\nimport './App.css';\n//import About from './Components/About';\nimport Navbar from './Components/Navbar.js'\nimport TextForm from './Components/TextForm.js'\nimport React ,{useState}from 'react'\nimport Alert from './Components/Alert';\n/*import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";*/\nfunction App() {\n  const [mode,setMode]=useState(\"light\");\n  const [alert,setAlert]=useState(null);\n  const showAlert=(type,message)=>{\n\n    setAlert({\n        message:message,\n        type:type\n    })\n\n    setTimeout(() => {\n      setAlert(null)\n      \n    }, 1500);\n\n  }\n  const toggleMode=()=>{\n\n    if(mode===\"light\")\n    {\n      setMode(\"dark\");\n      document.body.style.backgroundColor=\"#265948\"\n      showAlert(\"success\",\"Darkmode Enabled\")\n      setInterval(() => {\n        document.title=\"Text Utils\"\n      }, 2000);\n      setInterval(() => {\n        document.title=\"Best Text Utility App\"\n      }, 1500);\n    }\n    else{\n      setMode(\"light\");\n      document.body.style.backgroundColor=\"white\"\n      showAlert(\"success\",\"Light Mode Enabled\")\n\n\n    }\n  }\n  return (\n    \n    <div>\n    {//<Router>\n    }\n    \n     {/*<Navbar title=\"Sachin\" about=\"About me\"/>*/}\n      <Navbar mode={mode}   toggleMode={toggleMode}></Navbar>\n      \n      \n      <div className=\"container my-3\">\n      <Alert alert={alert}/>\n      <TextForm mode={mode} showAlert={showAlert} heading=\"Enter your text to analyse\"  />\n\n      {/*<Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\">\n           \n          </Route>\n      </Switch>*/}\n     \n      {/*<About></About>*/\n      }\n      </div>\n     \n    \n    {//</Router>\n    }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}